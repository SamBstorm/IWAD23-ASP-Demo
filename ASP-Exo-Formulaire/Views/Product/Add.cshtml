@* 
    Plus nécessaire, plus de ModelState interrogé...
@using Microsoft.AspNetCore.Mvc.ModelBinding *@
@model ProductAddForm
<!DOCTYPE html>
<html lang="fr-be">
    <head>
        <meta charset="utf-8" />
        <title>Exercice Product : Ajout de produits</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    </head>
    <body>
        <h1>Ajout d'un produit</h1>
        @if (!ViewContext.ModelState.IsValid)
        {
            @* Remplacer par ValidationSummary()
                <div class="alert alert-danger" role="alert">
                <p>Il y a @ViewContext.ModelState.ErrorCount erreur(s) :</p>
                <ul>
                @foreach(KeyValuePair<string, ModelStateEntry> kvpError in ViewContext.ModelState)
                {
                    @if(kvpError.Value.Errors.Count > 0)
                    {
                    <li>
                        <h3>@kvpError.Key :</h3>
                        <ul>
                            @foreach(ModelError error in kvpError.Value.Errors)
                            {
                            <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </li>      
                    }
                }
                </ul>
            </div> *@
            @Html.ValidationSummary(true,
                $"Il y a {ViewContext.ModelState.ErrorCount} erreur(s) ...",
                new { @class = "alert alert-danger", role = "alert" }
            )
        }
        <div class="row">
            <div class="col-md-6">
                <form method="post">
                    <div class="form-group">
                        <label for="Name">Nom du produit :</label>
                        <input type="text" id="Name" name="Name" class="form-control" required />
                        @Html.ValidationMessageFor(m => m.Name,null, new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        <label for="Barcode">Code-barre :</label>
                        <input type="text" id="Barcode" name="Barcode" class="form-control" required />
                        @Html.ValidationMessageFor(m => m.Barcode, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="BuyingPrice">Prix d'achat :</label>
                        <input type="text" id="BuyingPrice" name="BuyingPrice" class="form-control" pattern="^[0-9]*,{0,1}[0-9]*$" required />
                        @Html.ValidationMessageFor(m => m.BuyingPrice, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="SalePrice">Prix de vente :</label>
                        <input type="text" id="SalePrice" name="SalePrice" class="form-control" pattern="^[0-9]*,{0,1}[0-9]*$" />
                        @Html.ValidationMessageFor(m => m.SalePrice, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Enregistrer</button>

                    </div>
                </form>
                @* <a href="/Product/">Revenir à la liste</a> *@
                @Html.ActionLink("Revenir à la liste", "Index")
            </div>
        </div>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    </body>
</html>